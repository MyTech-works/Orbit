
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Layout/_LayoutAdminPanel.cshtml";
}

@model SK_CRM.Models.RegisterViewModel

<div class="content-wrapper container-xxl p-0">
    <div class="content-header row">
    </div>
    <div class="content-body">
        <!-- Horizontal Wizard -->
        <section class="horizontal-wizard">
            <div class="bs-stepper horizontal-wizard-example">
                <div class="bs-stepper-header" role="tablist">
                    <div class="step active" data-target="#account-details" role="tab" id="account-details-trigger">
                        <button type="button" class="step-trigger">
                            <span class="bs-stepper-box">1</span>
                            <span class="bs-stepper-label">
                                <span class="bs-stepper-title">User Details</span>
                                <span class="bs-stepper-subtitle">Setup User Details</span>
                            </span>
                        </button>
                    </div>
                    <div class="line">
                        <i data-feather="chevron-right" class="font-medium-2"></i>
                    </div>


                </div>
                <div class="bs-stepper-content">

                    <div id="account-details" class="content active dstepper-block" role="tabpanel" aria-labelledby="account-details-trigger">
                        <div class="content-header">
                            <h5 class="mb-0">User Details</h5>
                            <small class="text-muted">Enter New User Details.</small>
                        </div>
                        @using (Html.BeginForm("Create", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter User Name" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Confirm Password" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="row">
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number", @maxlength = "10", @minlength = "10", @autocomplete = "tel", @onkeypress = "return isNumberKey(event)" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="mb-1 col-md-6">
                                    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.RoleName, (SelectList)ViewBag.Name, "--Choose Role--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <button class="btn btn-outline-secondary btn-prev" type="button" onclick="location.href='@Url.Action("Index", "Account")'">
                                    <i data-feather="arrow-left" class="align-middle me-sm-25 me-0"></i>
                                    <span class="align-middle d-sm-inline-block d-none">Discard</span>
                                </button>

                                <button class="btn btn-success" type="submit" id="btnSave">
                                    <i class="fa fa-spinner fa-spin hide-spinner"></i>Submit
                                </button>
                            </div>
                        }

                    </div>



                    @*}*@
                </div>

            </div>
        </section>
        <!-- /Horizontal Wizard -->
    </div>

</div>


